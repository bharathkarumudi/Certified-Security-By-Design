(******************************************************************************)
(* Exercise Chapter 15                                                        *)
(* Author: Bharath Karumudi                                                   *)
(* Date: Aug 30 2019                                                          *)
(******************************************************************************)

structure cryptoExercisesScript = struct

open HolKernel boolLib Parse bossLib
open TypeBase isainfRules optionTheory cipherTheory stringTheory

val _ = new_theory "cryptoExercises";

(******************************************************************************)
(* Exercise 15.6.1A                                                           *)
(* ` ∀ key enMsg message.                                                     *)
(*  deciphS key enMsg = SOME message) ⇐⇒   (enMsg = Es key (SOME message))  *)
(******************************************************************************)

val exercise15_6_1a_thm =
TAC_PROOF(
([],
``! key enMsg message. (deciphS key enMsg = SOME message) <=> (enMsg = Es key (SOME message))``),
ASM_REWRITE_TAC [deciphS_one_one]);

val _ = save_thm("exercise15_6_1a_thm",exercise15_6_1a_thm)

(******************************************************************************)
(* Exercise 15.6.1B                                                           *)
(* ` ∀ keyAlice k text.                                                       *)
(*    (deciphS keyAlice (Es k (SOME text)) =                                  *)
(*    SOME “This is from Alice”) ⇐⇒                                         *)
(*    (k = keyAlice) ∧ (text = “This is from Alice”)                          *)
(******************************************************************************)

val exercise15_6_1b_thm =
TAC_PROOF(
([],
``! keyAlice k text.
(deciphS keyAlice (Es k (SOME text)) =
SOME "This is from Alice") <=>
(k = keyAlice) /\ (text = "This is from Alice")``),
ASM_REWRITE_TAC [deciphS_one_one] THEN
PROVE_TAC[]
);

val _ = save_thm("exercise15_6_1b_thm",exercise15_6_1b_thm)

(******************************************************************************)
(* Exercise 15.6.2A                                                           *)
(*  ` ∀ P message.                                                            *)
(*   (deciphP (pubK P) enMsg = SOME message) ⇐⇒                             *)
(*   (enMsg = Ea (privK P) (SOME message))                                    *)
(******************************************************************************)

val exercise15_6_2a_thm =
TAC_PROOF(
([],
``! P message.
(deciphP (pubK P) enMsg = SOME message)<=>
(enMsg = Ea (privK P) (SOME message))``),
PROVE_TAC[deciphP_one_one]
);

val _ = save_thm("exercise15_6_2a_thm",exercise15_6_2a_thm)


(******************************************************************************)
(* Exercise 15.6.2B                                                           *)
(*  ` ∀ key text.                                                             *)
(*    (deciphP (pubK Alice) (Ea key (SOME text)) =                            *)
(*    SOME “This is from Alice”) ⇐⇒                                         *)
(*    (key = privK Alice) ∧ (text = “This is from Alice”)                     *)
(******************************************************************************)

val exercise15_6_2b_thm =
TAC_PROOF(
([],
``! key text.
(deciphP (pubK Alice) (Ea key (SOME text)) =
SOME "This is from Alice") <=>
(key = privK Alice) ∧ (text = "This is from Alice")``),
ASM_REWRITE_TAC[deciphP_one_one] THEN
ASM_REWRITE_TAC[option_CLAUSES]);

val _ =save_thm("exercise15_6_2b_thm", exercise15_6_2b_thm)

(******************************************************************************)
(* Exercise 15.6.3                                                            *)
(*  ` ∀ signature.                                                            *)
(*    signVerify (pubK Alice) signature                                       *)
(*    (SOME “This is from Alice”) ⇐⇒                                        *)
(*    (signature =                                                            *)       
(*    sign (privK Alice) (hash (SOME “This is from Alice”)))                  *)
(******************************************************************************)

val exercise15_6_3_thm =
TAC_PROOF(
([],
``! signature.signVerify (pubK Alice) signature
(SOME "This is from Alice") <=>
(signature =
sign (privK Alice) (hash (SOME "This is from Alice")))``),
ASM_REWRITE_TAC[signVerify_one_one]);

val _ =save_thm("exercise15_6_3_thm",exercise15_6_3_thm)



(******************************************************************************)
(* Exporting Theory                                                           *)
(******************************************************************************)

val _ = print_theory "-";
val _ = export_theory();

end (* structure *)
